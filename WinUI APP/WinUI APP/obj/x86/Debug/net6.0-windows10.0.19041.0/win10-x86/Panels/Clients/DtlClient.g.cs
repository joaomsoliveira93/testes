#pragma checksum "D:\Repositorios\testes\WinUI APP\WinUI APP\Panels\Clients\DtlClient.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "42E004096C0BADA9314C2AABA38C855B15702E1FACBEF978B1F1D4366FB866E9"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinUI_APP
{
    partial class Detalhes : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_CommunityToolkit_WinUI_UI_Controls_DataGridColumn_Visibility(global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBox_Text(global::Microsoft.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class Detalhes_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IDetalhes_Bindings
        {
            private global::WinUI_APP.Detalhes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn obj9;
            private global::Microsoft.UI.Xaml.Controls.CommandBar obj13;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj15;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj16;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj19;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj20;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj23;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj24;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj27;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj28;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj30;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj31;
            private global::Microsoft.UI.Xaml.Controls.CommandBar obj32;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj9VisibilityDisabled = false;
            private static bool isobj13VisibilityDisabled = false;
            private static bool isobj15TextDisabled = false;
            private static bool isobj16TextDisabled = false;
            private static bool isobj19TextDisabled = false;
            private static bool isobj20TextDisabled = false;
            private static bool isobj23TextDisabled = false;
            private static bool isobj24TextDisabled = false;
            private static bool isobj27TextDisabled = false;
            private static bool isobj28TextDisabled = false;
            private static bool isobj30TextDisabled = false;
            private static bool isobj31TextDisabled = false;
            private static bool isobj32VisibilityDisabled = false;

            private Detalhes_obj1_BindingsTracking bindingsTracking;

            public Detalhes_obj1_Bindings()
            {
                this.bindingsTracking = new Detalhes_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 81 && columnNumber == 54)
                {
                    isobj9VisibilityDisabled = true;
                }
                else if (lineNumber == 57 && columnNumber == 25)
                {
                    isobj13VisibilityDisabled = true;
                }
                else if (lineNumber == 28 && columnNumber == 78)
                {
                    isobj15TextDisabled = true;
                }
                else if (lineNumber == 29 && columnNumber == 91)
                {
                    isobj16TextDisabled = true;
                }
                else if (lineNumber == 34 && columnNumber == 79)
                {
                    isobj19TextDisabled = true;
                }
                else if (lineNumber == 35 && columnNumber == 86)
                {
                    isobj20TextDisabled = true;
                }
                else if (lineNumber == 40 && columnNumber == 79)
                {
                    isobj23TextDisabled = true;
                }
                else if (lineNumber == 41 && columnNumber == 81)
                {
                    isobj24TextDisabled = true;
                }
                else if (lineNumber == 46 && columnNumber == 78)
                {
                    isobj27TextDisabled = true;
                }
                else if (lineNumber == 47 && columnNumber == 86)
                {
                    isobj28TextDisabled = true;
                }
                else if (lineNumber == 51 && columnNumber == 98)
                {
                    isobj30TextDisabled = true;
                }
                else if (lineNumber == 52 && columnNumber == 95)
                {
                    isobj31TextDisabled = true;
                }
                else if (lineNumber == 18 && columnNumber == 25)
                {
                    isobj32VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 9: // Panels\Clients\DtlClient.xaml line 81
                        this.obj9 = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn>(target);
                        break;
                    case 13: // Panels\Clients\DtlClient.xaml line 57
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CommandBar>(target);
                        break;
                    case 15: // Panels\Clients\DtlClient.xaml line 28
                        this.obj15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_15(this.obj15);
                        break;
                    case 16: // Panels\Clients\DtlClient.xaml line 29
                        this.obj16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_16(this.obj16);
                        break;
                    case 19: // Panels\Clients\DtlClient.xaml line 34
                        this.obj19 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_19(this.obj19);
                        break;
                    case 20: // Panels\Clients\DtlClient.xaml line 35
                        this.obj20 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_20(this.obj20);
                        break;
                    case 23: // Panels\Clients\DtlClient.xaml line 40
                        this.obj23 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_23(this.obj23);
                        break;
                    case 24: // Panels\Clients\DtlClient.xaml line 41
                        this.obj24 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_24(this.obj24);
                        break;
                    case 27: // Panels\Clients\DtlClient.xaml line 46
                        this.obj27 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_27(this.obj27);
                        break;
                    case 28: // Panels\Clients\DtlClient.xaml line 47
                        this.obj28 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_28(this.obj28);
                        break;
                    case 30: // Panels\Clients\DtlClient.xaml line 51
                        this.obj30 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_30(this.obj30);
                        break;
                    case 31: // Panels\Clients\DtlClient.xaml line 52
                        this.obj31 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_31(this.obj31);
                        break;
                    case 32: // Panels\Clients\DtlClient.xaml line 18
                        this.obj32 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CommandBar>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IDetalhes_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUI_APP.Detalhes>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUI_APP.Detalhes obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ManageLicences(obj.ManageLicences, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_clientInfo(obj.clientInfo, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ManageClients(obj.ManageClients, phase);
                    }
                }
            }
            private void Update_ManageLicences(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                {
                    this.Update_ManageLicences_Cast_ManageLicences_To_Visibility(obj ? global::Microsoft.UI.Xaml.Visibility.Visible : global::Microsoft.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_ManageLicences_Cast_ManageLicences_To_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 81
                    if (!isobj9VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_CommunityToolkit_WinUI_UI_Controls_DataGridColumn_Visibility(this.obj9, obj);
                    }
                    // Panels\Clients\DtlClient.xaml line 57
                    if (!isobj13VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj13, obj);
                    }
                }
            }
            private void Update_clientInfo(global::WinUI_APP.Classes.Clients obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_clientInfo(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_clientInfo_Name(obj.Name, phase);
                        this.Update_clientInfo_Ncont(obj.Ncont, phase);
                        this.Update_clientInfo_Morada(obj.Morada, phase);
                        this.Update_clientInfo_CodPost(obj.CodPost, phase);
                        this.Update_clientInfo_Cidade(obj.Cidade, phase);
                        this.Update_clientInfo_Contacto(obj.Contacto, phase);
                        this.Update_clientInfo_Email(obj.Email, phase);
                        this.Update_clientInfo_Rep(obj.Rep, phase);
                        this.Update_clientInfo_RepContacto(obj.RepContacto, phase);
                        this.Update_clientInfo_RepEmail(obj.RepEmail, phase);
                    }
                }
            }
            private void Update_clientInfo_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 28
                    if (!isobj15TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj15, obj, null);
                    }
                }
            }
            private void Update_clientInfo_Ncont(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 29
                    if (!isobj16TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj16, obj, null);
                    }
                }
            }
            private void Update_clientInfo_Morada(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 34
                    if (!isobj19TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj19, obj, null);
                    }
                }
            }
            private void Update_clientInfo_CodPost(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 35
                    if (!isobj20TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj20, obj, null);
                    }
                }
            }
            private void Update_clientInfo_Cidade(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 40
                    if (!isobj23TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj23, obj, null);
                    }
                }
            }
            private void Update_clientInfo_Contacto(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 41
                    if (!isobj24TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj24, obj, null);
                    }
                }
            }
            private void Update_clientInfo_Email(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 46
                    if (!isobj27TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj27, obj, null);
                    }
                }
            }
            private void Update_clientInfo_Rep(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 47
                    if (!isobj28TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj28, obj, null);
                    }
                }
            }
            private void Update_clientInfo_RepContacto(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 51
                    if (!isobj30TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj30, obj, null);
                    }
                }
            }
            private void Update_clientInfo_RepEmail(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 52
                    if (!isobj31TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj31, obj, null);
                    }
                }
            }
            private void Update_ManageClients(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                {
                    this.Update_ManageClients_Cast_ManageClients_To_Visibility(obj ? global::Microsoft.UI.Xaml.Visibility.Visible : global::Microsoft.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_ManageClients_Cast_ManageClients_To_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 18
                    if (!isobj32VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj32, obj);
                    }
                }
            }
            private void UpdateTwoWay_15_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Name = this.obj15.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_16_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Ncont = this.obj16.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_19_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Morada = this.obj19.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_20_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.CodPost = this.obj20.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_23_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Cidade = this.obj23.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_24_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Contacto = this.obj24.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_27_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Email = this.obj27.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_28_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Rep = this.obj28.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_30_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.RepContacto = this.obj30.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_31_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.RepEmail = this.obj31.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class Detalhes_obj1_BindingsTracking
            {
                private global::System.WeakReference<Detalhes_obj1_Bindings> weakRefToBindingObj; 

                public Detalhes_obj1_BindingsTracking(Detalhes_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<Detalhes_obj1_Bindings>(obj);
                }

                public Detalhes_obj1_Bindings TryGetBindingObject()
                {
                    Detalhes_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_clientInfo(null);
                }

                public void PropertyChanged_clientInfo(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Detalhes_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::WinUI_APP.Classes.Clients obj = sender as global::WinUI_APP.Classes.Clients;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_clientInfo_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_clientInfo_Ncont(obj.Ncont, DATA_CHANGED);
                                bindings.Update_clientInfo_Morada(obj.Morada, DATA_CHANGED);
                                bindings.Update_clientInfo_CodPost(obj.CodPost, DATA_CHANGED);
                                bindings.Update_clientInfo_Cidade(obj.Cidade, DATA_CHANGED);
                                bindings.Update_clientInfo_Contacto(obj.Contacto, DATA_CHANGED);
                                bindings.Update_clientInfo_Email(obj.Email, DATA_CHANGED);
                                bindings.Update_clientInfo_Rep(obj.Rep, DATA_CHANGED);
                                bindings.Update_clientInfo_RepContacto(obj.RepContacto, DATA_CHANGED);
                                bindings.Update_clientInfo_RepEmail(obj.RepEmail, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Ncont":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Ncont(obj.Ncont, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Morada":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Morada(obj.Morada, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CodPost":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_CodPost(obj.CodPost, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Cidade":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Cidade(obj.Cidade, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Contacto":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Contacto(obj.Contacto, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Email":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Email(obj.Email, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Rep":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Rep(obj.Rep, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RepContacto":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_RepContacto(obj.RepContacto, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RepEmail":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_RepEmail(obj.RepEmail, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::WinUI_APP.Classes.Clients cache_clientInfo = null;
                public void UpdateChildListeners_clientInfo(global::WinUI_APP.Classes.Clients obj)
                {
                    if (obj != cache_clientInfo)
                    {
                        if (cache_clientInfo != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_clientInfo).PropertyChanged -= PropertyChanged_clientInfo;
                            cache_clientInfo = null;
                        }
                        if (obj != null)
                        {
                            cache_clientInfo = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_clientInfo;
                        }
                    }
                }
                public void RegisterTwoWayListener_15(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_15_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_16(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_16_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_19(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_19_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_20(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_20_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_23(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_23_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_24(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_24_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_27(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_27_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_28(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_28_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_30(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_30_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_31(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_31_Text();
                        }
                    };
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Panels\Clients\DtlClient.xaml line 94
                {
                    this.addEditDialog = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ContentDialog>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ContentDialog)this.addEditDialog).Opened += this.addEditDialog_Opened;
                    ((global::Microsoft.UI.Xaml.Controls.ContentDialog)this.addEditDialog).PrimaryButtonClick += this.addEditDialog_PrimaryButtonClick;
                    ((global::Microsoft.UI.Xaml.Controls.ContentDialog)this.addEditDialog).CloseButtonClick += this.addEditDialog_CloseButtonClick;
                }
                break;
            case 3: // Panels\Clients\DtlClient.xaml line 97
                {
                    this.tipoLicenca = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.tipoLicenca).TextChanged += this.validation;
                }
                break;
            case 4: // Panels\Clients\DtlClient.xaml line 98
                {
                    this.tipoLicencaValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 5: // Panels\Clients\DtlClient.xaml line 99
                {
                    this.obsLicenca = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 6: // Panels\Clients\DtlClient.xaml line 100
                {
                    this.startedAtLicenca = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CalendarDatePicker>(target);
                }
                break;
            case 7: // Panels\Clients\DtlClient.xaml line 101
                {
                    this.endedAtLicenca = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CalendarDatePicker>(target);
                }
                break;
            case 8: // Panels\Clients\DtlClient.xaml line 62
                {
                    this.licencesGrid = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.UI.Controls.DataGrid>(target);
                }
                break;
            case 11: // Panels\Clients\DtlClient.xaml line 85
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element11).Click += this.EditLicenceButton_Click;
                }
                break;
            case 12: // Panels\Clients\DtlClient.xaml line 86
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element12).Click += this.DeleteLicenceButton_Click;
                }
                break;
            case 14: // Panels\Clients\DtlClient.xaml line 58
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element14 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element14).Click += this.addLicenceButton_Click;
                }
                break;
            case 15: // Panels\Clients\DtlClient.xaml line 28
                {
                    this.name = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.name).TextChanged += this.validation;
                }
                break;
            case 16: // Panels\Clients\DtlClient.xaml line 29
                {
                    this.nCont = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.nCont).TextChanged += this.validation;
                }
                break;
            case 17: // Panels\Clients\DtlClient.xaml line 31
                {
                    this.nameValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 18: // Panels\Clients\DtlClient.xaml line 32
                {
                    this.nContValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 19: // Panels\Clients\DtlClient.xaml line 34
                {
                    this.morada = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.morada).TextChanged += this.validation;
                }
                break;
            case 20: // Panels\Clients\DtlClient.xaml line 35
                {
                    this.codPost = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.codPost).TextChanged += this.validation;
                }
                break;
            case 21: // Panels\Clients\DtlClient.xaml line 37
                {
                    this.moradaValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 22: // Panels\Clients\DtlClient.xaml line 38
                {
                    this.codPostValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 23: // Panels\Clients\DtlClient.xaml line 40
                {
                    this.cidade = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.cidade).TextChanged += this.validation;
                }
                break;
            case 24: // Panels\Clients\DtlClient.xaml line 41
                {
                    this.contacto = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.contacto).TextChanged += this.validation;
                }
                break;
            case 25: // Panels\Clients\DtlClient.xaml line 43
                {
                    this.cidadeValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 26: // Panels\Clients\DtlClient.xaml line 44
                {
                    this.contactoValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 27: // Panels\Clients\DtlClient.xaml line 46
                {
                    this.email = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.email).TextChanged += this.validation;
                }
                break;
            case 28: // Panels\Clients\DtlClient.xaml line 47
                {
                    this.rep = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 29: // Panels\Clients\DtlClient.xaml line 49
                {
                    this.emailValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 30: // Panels\Clients\DtlClient.xaml line 51
                {
                    this.repContacto = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 31: // Panels\Clients\DtlClient.xaml line 52
                {
                    this.repEmail = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 33: // Panels\Clients\DtlClient.xaml line 19
                {
                    this.Editar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.Editar).Click += this.Editar_Click;
                }
                break;
            case 34: // Panels\Clients\DtlClient.xaml line 20
                {
                    this.Apagar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.Apagar).Click += this.Apagar_Click;
                }
                break;
            case 35: // Panels\Clients\DtlClient.xaml line 21
                {
                    this.Guardar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.Guardar).Click += this.Guardar_Click;
                }
                break;
            case 36: // Panels\Clients\DtlClient.xaml line 22
                {
                    this.Cancelar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.Cancelar).Click += this.Cancelar_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Panels\Clients\DtlClient.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    Detalhes_obj1_Bindings bindings = new Detalhes_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

