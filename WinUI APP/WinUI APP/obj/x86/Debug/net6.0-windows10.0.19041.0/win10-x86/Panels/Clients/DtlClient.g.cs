#pragma checksum "C:\Users\joaom\source\repos\WinUI APP\WinUI APP\Panels\Clients\DtlClient.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "92FAEC4A7E73B2FE1C8A23BD7338124940F4E8DED96512F17455F6A8E1F11F9B"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinUI_APP
{
    partial class Detalhes : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_TextBox_Text(global::Microsoft.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class Detalhes_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IDetalhes_Bindings
        {
            private global::WinUI_APP.Detalhes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.TextBox obj13;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj14;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj17;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj18;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj21;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj22;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj25;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj26;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj28;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj29;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj13TextDisabled = false;
            private static bool isobj14TextDisabled = false;
            private static bool isobj17TextDisabled = false;
            private static bool isobj18TextDisabled = false;
            private static bool isobj21TextDisabled = false;
            private static bool isobj22TextDisabled = false;
            private static bool isobj25TextDisabled = false;
            private static bool isobj26TextDisabled = false;
            private static bool isobj28TextDisabled = false;
            private static bool isobj29TextDisabled = false;

            private Detalhes_obj1_BindingsTracking bindingsTracking;

            public Detalhes_obj1_Bindings()
            {
                this.bindingsTracking = new Detalhes_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 28 && columnNumber == 64)
                {
                    isobj13TextDisabled = true;
                }
                else if (lineNumber == 29 && columnNumber == 63)
                {
                    isobj14TextDisabled = true;
                }
                else if (lineNumber == 34 && columnNumber == 63)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 35 && columnNumber == 63)
                {
                    isobj18TextDisabled = true;
                }
                else if (lineNumber == 40 && columnNumber == 63)
                {
                    isobj21TextDisabled = true;
                }
                else if (lineNumber == 41 && columnNumber == 63)
                {
                    isobj22TextDisabled = true;
                }
                else if (lineNumber == 46 && columnNumber == 63)
                {
                    isobj25TextDisabled = true;
                }
                else if (lineNumber == 47 && columnNumber == 63)
                {
                    isobj26TextDisabled = true;
                }
                else if (lineNumber == 51 && columnNumber == 64)
                {
                    isobj28TextDisabled = true;
                }
                else if (lineNumber == 52 && columnNumber == 64)
                {
                    isobj29TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 13: // Panels\Clients\DtlClient.xaml line 28
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_13(this.obj13);
                        break;
                    case 14: // Panels\Clients\DtlClient.xaml line 29
                        this.obj14 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_14(this.obj14);
                        break;
                    case 17: // Panels\Clients\DtlClient.xaml line 34
                        this.obj17 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_17(this.obj17);
                        break;
                    case 18: // Panels\Clients\DtlClient.xaml line 35
                        this.obj18 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_18(this.obj18);
                        break;
                    case 21: // Panels\Clients\DtlClient.xaml line 40
                        this.obj21 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_21(this.obj21);
                        break;
                    case 22: // Panels\Clients\DtlClient.xaml line 41
                        this.obj22 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_22(this.obj22);
                        break;
                    case 25: // Panels\Clients\DtlClient.xaml line 46
                        this.obj25 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_25(this.obj25);
                        break;
                    case 26: // Panels\Clients\DtlClient.xaml line 47
                        this.obj26 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_26(this.obj26);
                        break;
                    case 28: // Panels\Clients\DtlClient.xaml line 51
                        this.obj28 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_28(this.obj28);
                        break;
                    case 29: // Panels\Clients\DtlClient.xaml line 52
                        this.obj29 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_29(this.obj29);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IDetalhes_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUI_APP.Detalhes>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUI_APP.Detalhes obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_clientInfo(obj.clientInfo, phase);
                    }
                }
            }
            private void Update_clientInfo(global::WinUI_APP.Classes.Clients obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_clientInfo(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_clientInfo_Name(obj.Name, phase);
                        this.Update_clientInfo_Ncont(obj.Ncont, phase);
                        this.Update_clientInfo_Morada(obj.Morada, phase);
                        this.Update_clientInfo_CodPost(obj.CodPost, phase);
                        this.Update_clientInfo_Cidade(obj.Cidade, phase);
                        this.Update_clientInfo_Contacto(obj.Contacto, phase);
                        this.Update_clientInfo_Email(obj.Email, phase);
                        this.Update_clientInfo_Rep(obj.Rep, phase);
                        this.Update_clientInfo_RepContacto(obj.RepContacto, phase);
                        this.Update_clientInfo_RepEmail(obj.RepEmail, phase);
                    }
                }
            }
            private void Update_clientInfo_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 28
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj13, obj, null);
                    }
                }
            }
            private void Update_clientInfo_Ncont(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 29
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj14, obj, null);
                    }
                }
            }
            private void Update_clientInfo_Morada(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 34
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj17, obj, null);
                    }
                }
            }
            private void Update_clientInfo_CodPost(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 35
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj18, obj, null);
                    }
                }
            }
            private void Update_clientInfo_Cidade(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 40
                    if (!isobj21TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj21, obj, null);
                    }
                }
            }
            private void Update_clientInfo_Contacto(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 41
                    if (!isobj22TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj22, obj, null);
                    }
                }
            }
            private void Update_clientInfo_Email(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 46
                    if (!isobj25TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj25, obj, null);
                    }
                }
            }
            private void Update_clientInfo_Rep(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 47
                    if (!isobj26TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj26, obj, null);
                    }
                }
            }
            private void Update_clientInfo_RepContacto(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 51
                    if (!isobj28TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj28, obj, null);
                    }
                }
            }
            private void Update_clientInfo_RepEmail(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Clients\DtlClient.xaml line 52
                    if (!isobj29TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj29, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_13_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Name = this.obj13.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_14_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Ncont = this.obj14.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_17_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Morada = this.obj17.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_18_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.CodPost = this.obj18.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_21_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Cidade = this.obj21.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_22_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Contacto = this.obj22.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_25_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Email = this.obj25.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_26_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.Rep = this.obj26.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_28_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.RepContacto = this.obj28.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_29_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.clientInfo != null)
                        {
                            this.dataRoot.clientInfo.RepEmail = this.obj29.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class Detalhes_obj1_BindingsTracking
            {
                private global::System.WeakReference<Detalhes_obj1_Bindings> weakRefToBindingObj; 

                public Detalhes_obj1_BindingsTracking(Detalhes_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<Detalhes_obj1_Bindings>(obj);
                }

                public Detalhes_obj1_Bindings TryGetBindingObject()
                {
                    Detalhes_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_clientInfo(null);
                }

                public void PropertyChanged_clientInfo(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Detalhes_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::WinUI_APP.Classes.Clients obj = sender as global::WinUI_APP.Classes.Clients;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_clientInfo_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_clientInfo_Ncont(obj.Ncont, DATA_CHANGED);
                                bindings.Update_clientInfo_Morada(obj.Morada, DATA_CHANGED);
                                bindings.Update_clientInfo_CodPost(obj.CodPost, DATA_CHANGED);
                                bindings.Update_clientInfo_Cidade(obj.Cidade, DATA_CHANGED);
                                bindings.Update_clientInfo_Contacto(obj.Contacto, DATA_CHANGED);
                                bindings.Update_clientInfo_Email(obj.Email, DATA_CHANGED);
                                bindings.Update_clientInfo_Rep(obj.Rep, DATA_CHANGED);
                                bindings.Update_clientInfo_RepContacto(obj.RepContacto, DATA_CHANGED);
                                bindings.Update_clientInfo_RepEmail(obj.RepEmail, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Ncont":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Ncont(obj.Ncont, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Morada":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Morada(obj.Morada, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CodPost":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_CodPost(obj.CodPost, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Cidade":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Cidade(obj.Cidade, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Contacto":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Contacto(obj.Contacto, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Email":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Email(obj.Email, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Rep":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_Rep(obj.Rep, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RepContacto":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_RepContacto(obj.RepContacto, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RepEmail":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_clientInfo_RepEmail(obj.RepEmail, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::WinUI_APP.Classes.Clients cache_clientInfo = null;
                public void UpdateChildListeners_clientInfo(global::WinUI_APP.Classes.Clients obj)
                {
                    if (obj != cache_clientInfo)
                    {
                        if (cache_clientInfo != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_clientInfo).PropertyChanged -= PropertyChanged_clientInfo;
                            cache_clientInfo = null;
                        }
                        if (obj != null)
                        {
                            cache_clientInfo = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_clientInfo;
                        }
                    }
                }
                public void RegisterTwoWayListener_13(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_13_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_14(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_14_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_17(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_17_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_18(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_18_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_21(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_21_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_22(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_22_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_25(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_25_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_26(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_26_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_28(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_28_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_29(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_29_Text();
                        }
                    };
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Panels\Clients\DtlClient.xaml line 94
                {
                    this.addEditDialog = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ContentDialog>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ContentDialog)this.addEditDialog).Opened += this.addEditDialog_Opened;
                    ((global::Microsoft.UI.Xaml.Controls.ContentDialog)this.addEditDialog).PrimaryButtonClick += this.addEditDialog_PrimaryButtonClick;
                    ((global::Microsoft.UI.Xaml.Controls.ContentDialog)this.addEditDialog).CloseButtonClick += this.addEditDialog_CloseButtonClick;
                }
                break;
            case 3: // Panels\Clients\DtlClient.xaml line 97
                {
                    this.tipoLicenca = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.tipoLicenca).TextChanged += this.validation;
                }
                break;
            case 4: // Panels\Clients\DtlClient.xaml line 98
                {
                    this.tipoLicencaValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 5: // Panels\Clients\DtlClient.xaml line 99
                {
                    this.obsLicenca = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 6: // Panels\Clients\DtlClient.xaml line 100
                {
                    this.startedAtLicenca = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CalendarDatePicker>(target);
                }
                break;
            case 7: // Panels\Clients\DtlClient.xaml line 101
                {
                    this.endedAtLicenca = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CalendarDatePicker>(target);
                }
                break;
            case 8: // Panels\Clients\DtlClient.xaml line 62
                {
                    this.licencesGrid = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.UI.Controls.DataGrid>(target);
                }
                break;
            case 10: // Panels\Clients\DtlClient.xaml line 85
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element10).Click += this.EditLicenceButton_Click;
                }
                break;
            case 11: // Panels\Clients\DtlClient.xaml line 86
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element11).Click += this.DeleteLicenceButton_Click;
                }
                break;
            case 12: // Panels\Clients\DtlClient.xaml line 58
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element12).Click += this.addLicenceButton_Click;
                }
                break;
            case 13: // Panels\Clients\DtlClient.xaml line 28
                {
                    this.name = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.name).TextChanged += this.validation;
                }
                break;
            case 14: // Panels\Clients\DtlClient.xaml line 29
                {
                    this.nCont = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.nCont).TextChanged += this.validation;
                }
                break;
            case 15: // Panels\Clients\DtlClient.xaml line 31
                {
                    this.nameValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 16: // Panels\Clients\DtlClient.xaml line 32
                {
                    this.nContValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 17: // Panels\Clients\DtlClient.xaml line 34
                {
                    this.morada = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.morada).TextChanged += this.validation;
                }
                break;
            case 18: // Panels\Clients\DtlClient.xaml line 35
                {
                    this.codPost = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.codPost).TextChanged += this.validation;
                }
                break;
            case 19: // Panels\Clients\DtlClient.xaml line 37
                {
                    this.moradaValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 20: // Panels\Clients\DtlClient.xaml line 38
                {
                    this.codPostValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 21: // Panels\Clients\DtlClient.xaml line 40
                {
                    this.cidade = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.cidade).TextChanged += this.validation;
                }
                break;
            case 22: // Panels\Clients\DtlClient.xaml line 41
                {
                    this.contacto = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.contacto).TextChanged += this.validation;
                }
                break;
            case 23: // Panels\Clients\DtlClient.xaml line 43
                {
                    this.cidadeValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 24: // Panels\Clients\DtlClient.xaml line 44
                {
                    this.contactoValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 25: // Panels\Clients\DtlClient.xaml line 46
                {
                    this.email = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.email).TextChanged += this.validation;
                }
                break;
            case 26: // Panels\Clients\DtlClient.xaml line 47
                {
                    this.rep = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 27: // Panels\Clients\DtlClient.xaml line 49
                {
                    this.emailValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 28: // Panels\Clients\DtlClient.xaml line 51
                {
                    this.repContacto = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 29: // Panels\Clients\DtlClient.xaml line 52
                {
                    this.repEmail = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 30: // Panels\Clients\DtlClient.xaml line 19
                {
                    this.Editar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.Editar).Click += this.Editar_Click;
                }
                break;
            case 31: // Panels\Clients\DtlClient.xaml line 20
                {
                    this.Apagar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.Apagar).Click += this.Apagar_Click;
                }
                break;
            case 32: // Panels\Clients\DtlClient.xaml line 21
                {
                    this.Guardar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.Guardar).Click += this.Guardar_Click;
                }
                break;
            case 33: // Panels\Clients\DtlClient.xaml line 22
                {
                    this.Cancelar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.Cancelar).Click += this.Cancelar_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Panels\Clients\DtlClient.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    Detalhes_obj1_Bindings bindings = new Detalhes_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

