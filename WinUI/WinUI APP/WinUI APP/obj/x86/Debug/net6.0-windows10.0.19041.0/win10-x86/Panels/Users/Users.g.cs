#pragma checksum "D:\Repositorios\testes\WinUI APP\WinUI APP\Panels\Users\Users.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "7DF18996EC42875E5233B8470D3C661F69FFDD7781AB3203045111AEB403D882"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinUI_APP.Panels.Users
{
    partial class Users : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_TextBox_Text(global::Microsoft.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Boolean) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), targetNullValue);
                }
                obj.IsChecked = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class Users_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IUsers_Bindings
        {
            private global::WinUI_APP.Panels.Users.Users dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.TextBox obj5;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj7;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj9;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj11;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj12;
            private global::Microsoft.UI.Xaml.Controls.StackPanel obj13;
            private global::Microsoft.UI.Xaml.Controls.CheckBox obj15;
            private global::Microsoft.UI.Xaml.Controls.CheckBox obj16;
            private global::Microsoft.UI.Xaml.Controls.CheckBox obj17;
            private global::Microsoft.UI.Xaml.Controls.CheckBox obj18;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj24;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj25;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj5TextDisabled = false;
            private static bool isobj7TextDisabled = false;
            private static bool isobj9TextDisabled = false;
            private static bool isobj11SelectedValueDisabled = false;
            private static bool isobj12VisibilityDisabled = false;
            private static bool isobj13VisibilityDisabled = false;
            private static bool isobj15IsCheckedDisabled = false;
            private static bool isobj16IsCheckedDisabled = false;
            private static bool isobj17IsCheckedDisabled = false;
            private static bool isobj18IsCheckedDisabled = false;
            private static bool isobj24SelectedValueDisabled = false;
            private static bool isobj25SelectedValueDisabled = false;

            private Users_obj1_BindingsTracking bindingsTracking;

            public Users_obj1_Bindings()
            {
                this.bindingsTracking = new Users_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 102 && columnNumber == 158)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 105 && columnNumber == 126)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 108 && columnNumber == 129)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 111 && columnNumber == 65)
                {
                    isobj11SelectedValueDisabled = true;
                }
                else if (lineNumber == 116 && columnNumber == 32)
                {
                    isobj12VisibilityDisabled = true;
                }
                else if (lineNumber == 117 && columnNumber == 33)
                {
                    isobj13VisibilityDisabled = true;
                }
                else if (lineNumber == 121 && columnNumber == 156)
                {
                    isobj15IsCheckedDisabled = true;
                }
                else if (lineNumber == 122 && columnNumber == 157)
                {
                    isobj16IsCheckedDisabled = true;
                }
                else if (lineNumber == 123 && columnNumber == 158)
                {
                    isobj17IsCheckedDisabled = true;
                }
                else if (lineNumber == 124 && columnNumber == 162)
                {
                    isobj18IsCheckedDisabled = true;
                }
                else if (lineNumber == 28 && columnNumber == 59)
                {
                    isobj24SelectedValueDisabled = true;
                }
                else if (lineNumber == 34 && columnNumber == 61)
                {
                    isobj25SelectedValueDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5: // Panels\Users\Users.xaml line 102
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 7: // Panels\Users\Users.xaml line 105
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 9: // Panels\Users\Users.xaml line 108
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 11: // Panels\Users\Users.xaml line 111
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        break;
                    case 12: // Panels\Users\Users.xaml line 116
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 13: // Panels\Users\Users.xaml line 117
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                        break;
                    case 15: // Panels\Users\Users.xaml line 121
                        this.obj15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_15(this.obj15);
                        break;
                    case 16: // Panels\Users\Users.xaml line 122
                        this.obj16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_16(this.obj16);
                        break;
                    case 17: // Panels\Users\Users.xaml line 123
                        this.obj17 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_17(this.obj17);
                        break;
                    case 18: // Panels\Users\Users.xaml line 124
                        this.obj18 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_18(this.obj18);
                        break;
                    case 24: // Panels\Users\Users.xaml line 28
                        this.obj24 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_24(this.obj24);
                        break;
                    case 25: // Panels\Users\Users.xaml line 34
                        this.obj25 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_25(this.obj25);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IUsers_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUI_APP.Panels.Users.Users>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUI_APP.Panels.Users.Users obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_newUser(obj.newUser, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_newtipo(obj.newtipo, phase);
                        this.Update_perm(obj.perm, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_filtertipo(obj.filtertipo, phase);
                        this.Update_filterestado(obj.filterestado, phase);
                    }
                }
            }
            private void Update_newUser(global::WinUI_APP.Classes.User obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_newUser(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_newUser_Username(obj.Username, phase);
                        this.Update_newUser_Name(obj.Name, phase);
                        this.Update_newUser_Email(obj.Email, phase);
                        this.Update_newUser_CanManageClients(obj.CanManageClients, phase);
                        this.Update_newUser_CanManageLicences(obj.CanManageLicences, phase);
                        this.Update_newUser_CanManageUsers(obj.CanManageUsers, phase);
                        this.Update_newUser_CanManagePermissions(obj.CanManagePermissions, phase);
                    }
                }
            }
            private void Update_newUser_Username(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Users\Users.xaml line 102
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj5, obj, null);
                    }
                }
            }
            private void Update_newUser_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Users\Users.xaml line 105
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj7, obj, null);
                    }
                }
            }
            private void Update_newUser_Email(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Users\Users.xaml line 108
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj9, obj, null);
                    }
                }
            }
            private void Update_newtipo(global::Microsoft.UI.Xaml.Controls.ComboBox obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Panels\Users\Users.xaml line 111
                    if (!isobj11SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj11, obj, null);
                    }
                }
            }
            private void Update_perm(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                {
                    this.Update_perm_Cast_perm_To_Visibility(obj ? global::Microsoft.UI.Xaml.Visibility.Visible : global::Microsoft.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_perm_Cast_perm_To_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Panels\Users\Users.xaml line 116
                    if (!isobj12VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj12, obj);
                    }
                    // Panels\Users\Users.xaml line 117
                    if (!isobj13VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj13, obj);
                    }
                }
            }
            private void Update_newUser_CanManageClients(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Users\Users.xaml line 121
                    if (!isobj15IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj15, obj, null);
                    }
                }
            }
            private void Update_newUser_CanManageLicences(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Users\Users.xaml line 122
                    if (!isobj16IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj16, obj, null);
                    }
                }
            }
            private void Update_newUser_CanManageUsers(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Users\Users.xaml line 123
                    if (!isobj17IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj17, obj, null);
                    }
                }
            }
            private void Update_newUser_CanManagePermissions(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Users\Users.xaml line 124
                    if (!isobj18IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj18, obj, null);
                    }
                }
            }
            private void Update_filtertipo(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Users\Users.xaml line 28
                    if (!isobj24SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj24, obj, null);
                    }
                }
            }
            private void Update_filterestado(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Panels\Users\Users.xaml line 34
                    if (!isobj25SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj25, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_5_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newUser != null)
                        {
                            this.dataRoot.newUser.Username = this.obj5.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newUser != null)
                        {
                            this.dataRoot.newUser.Name = this.obj7.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_9_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newUser != null)
                        {
                            this.dataRoot.newUser.Email = this.obj9.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_15_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newUser != null)
                        {
                            this.dataRoot.newUser.CanManageClients = (global::System.Boolean)this.obj15.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_16_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newUser != null)
                        {
                            this.dataRoot.newUser.CanManageLicences = (global::System.Boolean)this.obj16.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_17_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newUser != null)
                        {
                            this.dataRoot.newUser.CanManageUsers = (global::System.Boolean)this.obj17.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_18_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.newUser != null)
                        {
                            this.dataRoot.newUser.CanManagePermissions = (global::System.Boolean)this.obj18.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_24_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.filtertipo = (global::System.String)this.obj24.SelectedValue;
                    }
                }
            }
            private void UpdateTwoWay_25_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.filterestado = (global::System.String)this.obj25.SelectedValue;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class Users_obj1_BindingsTracking
            {
                private global::System.WeakReference<Users_obj1_Bindings> weakRefToBindingObj; 

                public Users_obj1_BindingsTracking(Users_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<Users_obj1_Bindings>(obj);
                }

                public Users_obj1_Bindings TryGetBindingObject()
                {
                    Users_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_newUser(null);
                }

                public void PropertyChanged_newUser(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Users_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::WinUI_APP.Classes.User obj = sender as global::WinUI_APP.Classes.User;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_newUser_Username(obj.Username, DATA_CHANGED);
                                bindings.Update_newUser_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_newUser_Email(obj.Email, DATA_CHANGED);
                                bindings.Update_newUser_CanManageClients(obj.CanManageClients, DATA_CHANGED);
                                bindings.Update_newUser_CanManageLicences(obj.CanManageLicences, DATA_CHANGED);
                                bindings.Update_newUser_CanManageUsers(obj.CanManageUsers, DATA_CHANGED);
                                bindings.Update_newUser_CanManagePermissions(obj.CanManagePermissions, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Username":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newUser_Username(obj.Username, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newUser_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Email":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newUser_Email(obj.Email, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CanManageClients":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newUser_CanManageClients(obj.CanManageClients, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CanManageLicences":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newUser_CanManageLicences(obj.CanManageLicences, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CanManageUsers":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newUser_CanManageUsers(obj.CanManageUsers, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CanManagePermissions":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_newUser_CanManagePermissions(obj.CanManagePermissions, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::WinUI_APP.Classes.User cache_newUser = null;
                public void UpdateChildListeners_newUser(global::WinUI_APP.Classes.User obj)
                {
                    if (obj != cache_newUser)
                    {
                        if (cache_newUser != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_newUser).PropertyChanged -= PropertyChanged_newUser;
                            cache_newUser = null;
                        }
                        if (obj != null)
                        {
                            cache_newUser = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_newUser;
                        }
                    }
                }
                public void RegisterTwoWayListener_5(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_7(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_9(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_15(global::Microsoft.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_15_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_16(global::Microsoft.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_16_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_17(global::Microsoft.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_17_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_18(global::Microsoft.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_18_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_24(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_24_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_25(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_25_SelectedValue();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Panels\Users\Users.xaml line 90
                {
                    this.nothing = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 3: // Panels\Users\Users.xaml line 92
                {
                    this.addUserDialog = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ContentDialog>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ContentDialog)this.addUserDialog).PrimaryButtonClick += this.addUserDialog_PrimaryButtonClick;
                }
                break;
            case 5: // Panels\Users\Users.xaml line 102
                {
                    this.username = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.username).TextChanged += this.validation;
                }
                break;
            case 6: // Panels\Users\Users.xaml line 103
                {
                    this.usernameValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 7: // Panels\Users\Users.xaml line 105
                {
                    this.name = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.name).TextChanged += this.validation;
                }
                break;
            case 8: // Panels\Users\Users.xaml line 106
                {
                    this.nameValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 9: // Panels\Users\Users.xaml line 108
                {
                    this.email = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.email).TextChanged += this.validation;
                }
                break;
            case 10: // Panels\Users\Users.xaml line 109
                {
                    this.emailValidator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 11: // Panels\Users\Users.xaml line 111
                {
                    this.newtipo = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.newtipo).SelectionChanged += this.newtipo_SelectionChanged;
                }
                break;
            case 14: // Panels\Users\Users.xaml line 118
                {
                    this.PermissionsAllCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.PermissionsAllCheckBox).Checked += this.PermissionsAll_Checked;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.PermissionsAllCheckBox).Unchecked += this.PermissionsAll_Unchecked;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.PermissionsAllCheckBox).Indeterminate += this.PermissionsAll_Indeterminate;
                }
                break;
            case 15: // Panels\Users\Users.xaml line 121
                {
                    this.ClientsCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.ClientsCheckBox).Checked += this.Option_Checked;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.ClientsCheckBox).Unchecked += this.Option_Unchecked;
                }
                break;
            case 16: // Panels\Users\Users.xaml line 122
                {
                    this.LicencesCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.LicencesCheckBox).Checked += this.Option_Checked;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.LicencesCheckBox).Unchecked += this.Option_Unchecked;
                }
                break;
            case 17: // Panels\Users\Users.xaml line 123
                {
                    this.UsersCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.UsersCheckBox).Checked += this.Option_Checked;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.UsersCheckBox).Unchecked += this.Option_Unchecked;
                }
                break;
            case 18: // Panels\Users\Users.xaml line 124
                {
                    this.PermissionsCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.PermissionsCheckBox).Checked += this.Option_Checked;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.PermissionsCheckBox).Unchecked += this.Option_Unchecked;
                }
                break;
            case 19: // Panels\Users\Users.xaml line 44
                {
                    this.grid = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.UI.Controls.DataGrid>(target);
                }
                break;
            case 20: // Panels\Users\Users.xaml line 82
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element20 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element20).Click += this.ViewUserButton_Click;
                }
                break;
            case 21: // Panels\Users\Users.xaml line 24
                {
                    this.filterUsername = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.filterUsername).TextChanged += this.filter;
                }
                break;
            case 22: // Panels\Users\Users.xaml line 25
                {
                    this.filterNome = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.filterNome).TextChanged += this.filter;
                }
                break;
            case 23: // Panels\Users\Users.xaml line 26
                {
                    this.filterEmail = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.filterEmail).TextChanged += this.filter;
                }
                break;
            case 24: // Panels\Users\Users.xaml line 28
                {
                    this.tipo = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.tipo).SelectionChanged += this.tipo_SelectionChanged;
                }
                break;
            case 25: // Panels\Users\Users.xaml line 34
                {
                    this.estado = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.estado).SelectionChanged += this.estado_SelectionChanged;
                }
                break;
            case 26: // Panels\Users\Users.xaml line 18
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element26 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element26).Click += this.AddUserButton_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Panels\Users\Users.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    Users_obj1_Bindings bindings = new Users_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

